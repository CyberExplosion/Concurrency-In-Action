<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;c++;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>
    </Filter>
    <Filter Include="Resource Files">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Threads.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Thread chapter 1.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Function object practice.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="thread - function object - lambda.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="scoped_thread.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="choose num threads at run time.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Identifying threads.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Using mutex in c++.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Don%27t pass locked reference or pointer outside the lock in any way.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - guideline to prevent deadlocks.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Personal Project - Thread safe linked-list, not done.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Threadd-safe Stack.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Simple Lock Hierarchical.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - unique lock.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Transfer lock ownership using unique.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Locking at correct granularity.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Protect data during initialization - Lazy init.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 3 - Protect read write data with share lock %28rare update data%29.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 4 - Waiting for data to process with conditional variables.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 4 - Thread safe Queue using condition variables.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 4 - Using future to return values from background task.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 4 - Using packaged_task to wrap future and pass task between threads.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Chapter 4 - Using promise_future handling waiting and delivery in different thread.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
  </ItemGroup>
</Project>